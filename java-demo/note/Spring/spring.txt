Spring
1.IOC (配置，注解)
2.Bean (配置，注解)
3.AOP (配置，注解，AspectJ, API)

Spring是一个轻量级的控制反转(IOC)和面向切面(AOP)的容器框架
 --从大小与开销两方面 Spring都是轻量级的；
 --通过控制反转(IOC)的技术达到松耦合的目的；
 --提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑与系统服务进行内聚性的开发；
 --包含并管理应用队形的配置和生命周期，这个意义上是一种容器；
 --将简单的组件配置，组合成复杂的应用，这个意义上是框架；



接口及面向接口编程
--接口：实体把自己提供给外界的一种抽象化说明，用以内部操作分离出外部沟通方法，使其能被修改内部而不影响外界其他实体与其交互的方式；
--java中的接口只能有声明，不能有实现。但java中，接口可以拥有方法体；
--在结构设计中，分清层次及调用关系，每层只向外（上层）提供一组功能接口，各层间只依赖接口而非实现类；
--接口实现的变动不影响各层间的调用；
-- 面向接口编程中的接口是用于隐藏具体实现和实现多态性的组件；



什么是IOC
--IOC 控制反转，控制权的转移，应用程序本身不负责依赖对象的创建和维护，而是由外部容器创建和维护；
（获得依赖对象的过程被反转了。控制被反转之后，获得依赖对象的过程由自身管理变为了由IOC容器主动注入）
--DI（依赖注入）是其一种实现方式；
--目的：创建对象并且组装对象之间的关系；

Spring的Bean 配置
--Spring 对Bean：xml的配置和注解；
--Bean的配置项
--Bean的作用域
  .singleton: 单例，指一个Bean容器中只有一份；
  .prototype: 每次请求（每次使用）创建新的实例，destroy方式不生效；
  .request: 每次http请求创建一个实例且仅在当前request内有效；
  .session: 同上，每次http请求创建，当前session内有效；
  .global session: 基于portlet的web中有效（portlet定义了global session）,如果是在web中，同session;
--Bean的生命周期
  .定义
  .初始化
  .使用
  .销毁
--Bean的自动装配
--Resources&ResourceLoader

Bean 的初始化

Spring的常用注入方式
--Spring注入是指在启动Spring容器加载Bean配置的时候，完成对变量的赋值行为；
--常用的两种注入方式：设值注入和构造注入；

Spring注解Bean
--@Component 是一个通用注解，可用于任何Bean；
--@Repository 通常用于注解DAO类，持久层；
--@Service 通常用于注解Service类，服务层；
--@Controller 通常用于注解Controller类，控制层（MVC）；


AOP 面向切面编程
--通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术
--主要功能是：日志记录，性能统计，安全控制，事务处理，异常处理等；
